1. Потоки используют общие ресурсы, поэтому возникает конкуренция за их владение. При обращении к ресурсу одновременно
нескольких потоков возникают ошибки. Чтобы это предотвротить используют "выключатель" или "табличку", который допускают
только один поток для работы с ресурсом, примером может служить mutex. Но и при работе с mutex нужно быть аккуратным, так 
как случаются тупики (deadlock), как у нас было при использовании двух mutex в разном порядке. В таких случаях можно 
использовать std::scoped_lock. Ещё нужно помнить, что многие операции не выполняются за одно действие в процессоре, как, 
например, сложение. В таких случаях потоки могут пересекаться, что не есть хорошо, исправить ситуацию могут помочь атомарные
переменные.
2. Атомарная операция - действие, которое на уровне процессора выполняется за одно действие (точнее сказать операция "выглядит
снаружи как атомарная", а на уровне процессора другие потоки "не мешают" выполнению). Переменные, действия с которыми
являются атомарными, называются атомарными переменными. В С++ работа с атомарными переменными осуществляется с помощью
std::atomic.